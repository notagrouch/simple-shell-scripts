#!/bin/bash

# Set up variables
ext1="jpg"
ext2="mp4"
source_dir="/path/to/source"
dest_dir="/path/to/destination"

# Function to extract date and time from filename
extract_datetime() {
  # Use regex to extract date and time from filename
  if [[ $filename =~ ^([0-9]{4})([0-9]{2})([0-9]{2})_([0-9]{2}):([0-9]{2}):([0-9]{2})\.([^.]+)$ ]]; then
    year=${BASH_REMATCH[1]}
    month=${BASH_REMATCH[2]}
    day=${BASH_REMATCH[3]}
    hour=${BASH_REMATCH[4]}
    minute=${BASH_REMATCH[5]}
    second=${BASH_REMATCH[6]}
  else
    # Print error message if regex does not match
    echo "Error: Unable to extract date and time from filename"
    return 1
  fi
}

# Function to construct destination path
construct_path() {
  # Use date and time variables to construct destination path
  dest_path="$dest_dir/$year/${year:2}-$month/$year-$month-$day/$filename"
  # Return destination path
  echo "$dest_path"
}

# Function to move file
move_file() {
  # Use rsync to move file to destination path
  if rsync -a "$file" "$dest_path"; then
    # Print success message
    echo "Success: Moved $file to $dest_path"
  else
    # Print error message
    echo "Error: Unable to move $file to $dest_path"
  fi
}

# Set up command line options

# Option to show usage message
if [ "$1" == "-h" ]; then
  echo "Usage: $(basename $0) [-n] [-q]"
  echo "Sort and move files with YYYYMMDD_hh:mm:ss.extension format to destination directory"
  echo "  -n  Dry run/test mode"
  echo "  -q  Quiet mode"
  exit 0
fi

# Option to run in test/dry run mode
if [ "$1" == "-n" ]; then
  test_mode=true
  shift
fi

# Option to run quietly
if [ "$1" == "-q" ]; then
  quiet_mode=true
  shift
fi

# Loop through files in source directory
for file in "$source_dir"/*; do
  # Extract filename and file extension
  filename=$(basename "$file")
  extension="${filename##*.}"
  # If file extension is not ext1 or ext2, skip file
  if [ "$extension" != "$ext1" ] && [ "$extension" != "$ext2" ]; then
    continue
  fi
  # Extract date and time from filename
  extract_datetime
  # Construct destination path
  dest_path=$(construct_path)
  # If not in test mode, move file
  if [ -z "$test_mode" ]; then
    move_file
  # Print dry run message if in test mode
  else
    echo "Dry run: Would have moved $file to $dest_path"
  fi
  # Print success or error message if not in quiet mode
  if [ -z "$quiet_mode" ]; then
    echo "$message"
  fi
done

